name: build

on:
  push:
    branches:
      - main

  pull_request:
  workflow_dispatch:

env:
  RUST_VERSION: 1.58.0
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: '-D warnings' 

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          profile: minimal

      - run: cargo check --all-targets
      - run: cargo test --no-default-features
      - run: cargo test
      - run: cargo test --all-features
      - run: cargo test --all-features -- --ignored

  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: clippy, rustfmt
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-features --all-targets

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      - run: cargo doc --all-features --no-deps

  unwanted-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - run: cargo install cargo-deny --locked
      - run: cargo deny check

  unused-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      - run: cargo install cargo-udeps --locked
      - run: cargo udeps

  release-pr:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      pr: ${{ steps.release_please.outputs.pr }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release_please
        with:
          release-type: rust
          command: release-pr
          extra-files: README.md
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"perf","section":"Performance","hidden":false},{"type":"docs","section":"Documentation","hidden":false}]'

  release:
    needs: [test, documentation, release-pr]
    if: ${{ !needs.release-pr.outputs.pr }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - run: cargo publish --dry-run

      - uses: google-github-actions/release-please-action@v3.2
        id: release
        with:
          release-type: rust
          command: github-release

      - run: cargo publish
        if: steps.release.outputs.release_created
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
