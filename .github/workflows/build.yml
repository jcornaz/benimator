name: Build

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      RUSTFLAGS: "-D warnings"

    strategy:
      matrix:
        rust:
          - '1.56.0'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.5

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup
            ~/.cargo
            ./target
          key: build-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: |
            build-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}-
            build-${{ matrix.rust }}-

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal

      - run: cargo test --no-default-features
      - run: cargo test --no-default-features -- --ignored

      - run: cargo test --no-default-features --features warnings
      - run: cargo test --no-default-features --features warnings -- --ignored

      - run: cargo test
      - run: cargo test -- --ignored

      - run: cargo test --all-features
      - run: cargo test --all-features -- --ignored

  code-style:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      RUSTFLAGS: "-D warnings"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.5

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup
            ~/.cargo
            ./target
          key: code-style-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: code-style-${{ hashFiles('**/Cargo.toml') }}-

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: '1.56.0'
          override: true
          components: clippy, rustfmt

      - run: cargo fmt -- --check
      - run: cargo clippy --all-features

  documentation:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      RUSTFLAGS: "-D warnings"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.5

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup
            ~/.cargo
            ./target
          key: docs-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: docs-${{ hashFiles('**/Cargo.toml') }}-

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: '1.56.0'
          override: true
          profile: minimal

      - run: cargo doc --all-features
