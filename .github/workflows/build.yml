name: build

on:
  push:
    branches:
      - main

  pull_request:
  workflow_dispatch:

env:
  RUST_VERSION: 1.58.0
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: '-D warnings' 

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          profile: minimal

      - run: cargo update -p async-global-executor --precise 2.0.4
      - run: cargo check --all-targets
      - run: cargo test --no-default-features
      - run: cargo test
      - run: cargo test --all-features
      - run: cargo test --all-features -- --ignored

  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-features --all-targets

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      - run: cargo doc --all-features --no-deps

  unwanted-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - run: cargo install cargo-deny --locked
      - run: cargo deny check

  unused-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      - run: cargo install cargo-udeps --locked
      - run: cargo udeps

  release:
    needs: [test, documentation]
    environment: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - run: npm install --no-save conventional-changelog-conventionalcommits @semantic-release/exec
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
