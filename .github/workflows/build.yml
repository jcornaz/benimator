name: build

on:
  push:
    branches:
      - main
      - rc
      - beta
      - alpha

  pull_request:
  workflow_dispatch:

env:
  RUST_VERSION: 1.62
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-D warnings"

jobs:
  test-no-feature:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - run: cargo check --all-targets --no-default-features
      - run: cargo test --no-default-features

  test-default-features:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - run: cargo check --all-targets
      - run: cargo test

  test-all-features:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - run: cargo check --all-targets --all-features
      - run: cargo test --all-features

  test-feature:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        feature:
          - "serde"
          - "yaml"
          - "ron"

    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - run: cargo check --all-targets --no-default-features --features "${{ matrix.feature }}"
      - run: cargo test --no-default-features --features "${{ matrix.feature }}"

  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-features --all-targets

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - run: cargo doc --all-features --no-deps

  unwanted-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - run: cargo install cargo-deny --locked
      - run: cargo deny check
